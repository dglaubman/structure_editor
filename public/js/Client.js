// Generated by CoffeeScript 1.6.3
(function() {
  var comm, controller, currentGraph, graphClickHandler, log, messageHandler, ticket,
    _this = this;

  log = new Log(d3.select("#console"));

  log.write("Starting up ...");

  currentGraph = "standard";

  ticket = void 0;

  d3.text('./ts', function(err, now) {
    if (err) {
      return log.write(err);
    } else {
      return ticket = "ticket." + now;
    }
  });

  graphClickHandler = function(d) {
    d3.select("#" + currentGraph).classed('selected', false);
    d3.select(this).classed('selected', true);
    update(this.id);
    return currentGraph = this.id;
  };

  d3.select("#clear").on('click', function() {
    return log.clear();
  });

  d3.select("#start").on("click", function(d) {
    return comm.startSubscription(currentGraph, ticket);
  });

  d3.selectAll(".posgraph").on("click", graphClickHandler);

  d3.select("#direction").on("click", function(d) {
    toggle();
    return render(graph);
  });

  controller = new Controller(log);

  controller.stopServer = function(name) {
    return comm.publish(config.workX, "stop " + name, config.execQ);
  };

  messageHandler = function(m) {
    var body, topic;
    topic = m.args.routingKey;
    body = m.body.getString(Charset.UTF8);
    switch (m.args.exchange) {
      case config.serverX:
        return serverDispatcher(controller, body);
    }
  };

  comm = new Communicator(log, messageHandler, ticket);

  comm.connect(config, config.credentials);

  graphClickHandler.call(document.getElementById(currentGraph));

}).call(this);
