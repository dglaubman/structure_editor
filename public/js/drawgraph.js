// Generated by CoffeeScript 1.6.3
(function() {
  var update;

  update = function(input) {
    var path;
    path = "data/" + input + ".json";
    return d3.json(path, function(adjacencies) {
      var edges, height, layout, margin, nodes, oldDrawEdgeLabel, oldDrawNode, renderer, svg, width;
      margin = {
        top: 20,
        right: 20,
        bottom: 20,
        left: 120
      };
      width = adjacencies.width || 920;
      height = adjacencies.height || 600;
      d3.selectAll("svg").remove();
      svg = d3.select("#chart").append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).style("margin-left", -margin.left + "px").append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      nodes = adjacencies.nodes;
      edges = adjacencies.edges;
      renderer = new dagreD3.Renderer();
      oldDrawNode = renderer.drawNode();
      oldDrawEdgeLabel = renderer.drawEdgeLabel();
      layout = dagreD3.layout().rankDir("TB");
      renderer.drawNode(function(graph, u, svg) {
        oldDrawNode(graph, u, svg);
        return svg.attr("id", "node-" + u);
      });
      renderer.drawEdgeLabel(function(graph, e, svg) {
        oldDrawEdgeLabel(graph, e, svg);
        return svg.attr("id", "edge-" + e);
      });
      return renderer.layout(layout).run(dagreD3.json.decode(nodes, edges), d3.select("svg g"));
    });
  };

  d3.selectAll(".posgraph").on("click", function(d) {
    return update(this.id);
  });

  update("standard");

}).call(this);
