// Generated by CoffeeScript 1.6.3
(function() {
  var graph, layout, render, toggle, update;

  graph = void 0;

  update = function(input) {
    var path;
    path = "data/" + input + ".json";
    return d3.json(path, render);
  };

  layout = dagreD3.layout();

  toggle = function() {
    var dir;
    dir = layout.rankDir;
    if (dir === "TB") {
      dir === "LR";
    } else {
      dir === "TB";
    }
    return layout.rankDir(dir);
  };

  render = function(adjacencies) {
    var direction, edges, height, margin, nodes, oldDrawEdgeLabel, oldDrawNode, renderer, svg, width;
    margin = {
      top: 20,
      right: 20,
      bottom: 20,
      left: 20
    };
    width = adjacencies.width || 920;
    height = adjacencies.height || 800;
    direction = adjacencies.direction || "TB";
    d3.selectAll("svg").remove();
    svg = d3.select("#chart").append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).style("margin-left", -margin.left + "px").append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    nodes = adjacencies.nodes;
    edges = adjacencies.edges;
    renderer = new dagreD3.Renderer();
    oldDrawNode = renderer.drawNode();
    oldDrawEdgeLabel = renderer.drawEdgeLabel();
    renderer.drawNode(function(graph, u, svg) {
      oldDrawNode(graph, u, svg);
      return svg.attr("id", "node-" + u);
    });
    renderer.drawEdgeLabel(function(graph, e, svg) {
      var val;
      oldDrawEdgeLabel(graph, e, svg);
      val = graph._edges[e].value;
      svg.attr("class", val.type);
      if (val.type === "choose") {
        return svg.attr("class", val.tag);
      }
    });
    renderer.layout(layout).run(dagreD3.json.decode(nodes, edges), d3.select("svg g"));
    return graph = adjacencies;
  };

  d3.selectAll(".posgraph").on("click", function(d) {
    return update(this.id);
  });

  d3.selectAll("#direction").on("click", function(d) {
    toggle();
    return render(graph);
  });

  d3.selectAll("#node_sep_up").on("click", function(d) {
    return render(graph);
  });

  update("standard");

}).call(this);
